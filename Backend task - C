#include <stdio.h>
#include <stdlib.h>

#define MAX_TASKS 100
#define MAX_DESC_LENGTH 100
#define DATE_LENGTH 11

struct Task {
    char description[MAX_DESC_LENGTH];
    char due_date[DATE_LENGTH];
    int completed;
};

struct TaskManager {
    struct Task tasks[MAX_TASKS];
    int task_count;
};

void add_task(struct TaskManager* manager, const char* date, const char* desc) {
    if (manager->task_count < MAX_TASKS) {
        struct Task* task = &manager->tasks[manager->task_count];
        snprintf(task->description, sizeof(task->description), "%s", desc);
        snprintf(task->due_date, sizeof(task->due_date), "%s", date);
        task->completed = 0; // Default is not completed
        manager->task_count++;
    } else {
        printf("Error: Task Manager is full. Cannot add more tasks.\n");
    }
}

void mark_completed(struct TaskManager* manager, int index) {
    if (index >= 0 && index < manager->task_count) {
        manager->tasks[index].completed = 1;
    } else {
        printf("Error: Invalid task index.\n");
    }
}

double get_completion_percentage(const struct TaskManager* manager, const char* date) {
    int completed = 0;
    int total = 0;

    for (int i = 0; i < manager->task_count; i++) {
        if (strncmp(manager->tasks[i].due_date, date, DATE_LENGTH) == 0) {
            total++;
            if (manager->tasks[i].completed) {
                completed++;
            }
        }
    }

    return (total > 0) ? ((double)completed / total) * 100.0 : 0.0;
}

int main() {
    struct TaskManager manager;
    manager.task_count = 0;

    int choice;
    char date[DATE_LENGTH];
    char desc[MAX_DESC_LENGTH];
    int task_index;

    do {
        printf("\nMenu:\n");
        printf("1. Add Task\n");
        printf("2. Mark Task as Completed\n");
        printf("3. Get Completion Percentage\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        if (scanf("%d", &choice) != 1) {
            printf("Error: Invalid input. Please enter a number.\n");
            break;
        }

        switch (choice) {
            case 1:
                printf("Task description: ");
                if (scanf("%s", desc) != 1) {
                    printf("Error: Invalid description.\n");
                    break;
                }
                printf("Due date (YYYY-MM-DD): ");
                if (scanf("%s", date) != 1) {
                    printf("Error: Invalid date format.\n");
                    break;
                }
                add_task(&manager, date, desc);
                break;
            case 2:
                printf("Task index to mark as completed: ");
                if (scanf("%d", &task_index) != 1) {
                    printf("Error: Invalid task index format.\n");
                    break;
                }
                mark_completed(&manager, task_index);
                break;
            case 3:
                printf("Enter due date (YYYY-MM-DD): ");
                if (scanf("%s", date) != 1) {
                    printf("Error: Invalid date format.\n");
                    break;
                }
                printf("Completion percentage on %s: %.2lf%%\n", date, get_completion_percentage(&manager, date));
                break;
            case 4:
                break;
            default:
                printf("Error: Invalid choice. Please enter a valid option.\n");
                break;
        }
    } while (choice != 4);

    return 0;
}
